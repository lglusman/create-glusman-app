using System;using System.Collections.Generic;using WebApi.Models.DTOs;using WebApi.Models.Entities;namespace WebApi.Models.DTOs{	public class UsuarioRolDTO	{		public int Id { get; set; } = 0;		public int UsuarioId { get; set; } = 0;		public int RolId { get; set; } = 0;		public string FechaAlta { get; set; } = "";		public int UsuarioAltaId { get; set; } = 0;		public string? FechaBaja { get; set; } = null;		public int? UsuarioBajaId { get; set; } = null;		public string? FechaModificacion { get; set; } = null;		public int? UsuarioModificacionId { get; set; } = null;		public RolDTO? Rol { get; set; }		public UsuarioDTO? Usuario { get; set; }		public UsuarioRol ToEntity()		{			return new UsuarioRol()			{				Id = Id,				UsuarioId = UsuarioId,				RolId = RolId,				FechaAlta = DateTime.Parse(FechaAlta),				UsuarioAltaId = UsuarioAltaId,				FechaBaja = FechaBaja != "" && FechaBaja != null ? DateTime.Parse(FechaBaja) : null,				UsuarioBajaId = UsuarioBajaId,				FechaModificacion = FechaModificacion != "" && FechaModificacion != null ? DateTime.Parse(FechaModificacion) : null,				UsuarioModificacionId = UsuarioModificacionId,         };      }        internal void validar()        {            var strError = "";            if (UsuarioId == 0) strError += "* UsuarioId es requerido";            if (RolId == 0) strError += "* RolId es requerido";            if (FechaAlta.Trim() == "") strError += "* FechaAlta es requerido";            if (UsuarioAltaId == 0) strError += "* UsuarioAltaId es requerido";            if (strError != "")            {                throw new Exception(strError);            }         }   }}namespace WebApi.Models.Entities{	public partial class UsuarioRol: Idtoable	{		public override UsuarioRolDTO ToDTO()		{			var dto = new UsuarioRolDTO();			dto.Id = Id;			dto.UsuarioId = UsuarioId;			dto.RolId = RolId;			dto.FechaAlta = FechaAlta.ToString("yyyy/MM/dd");			dto.UsuarioAltaId = UsuarioAltaId;			dto.FechaBaja = FechaBaja?.ToString("yyyy/MM/dd");			dto.UsuarioBajaId = UsuarioBajaId;			dto.FechaModificacion = FechaModificacion?.ToString("yyyy/MM/dd");			dto.UsuarioModificacionId = UsuarioModificacionId;			if (Rol != null)			{				this.Rol.UsuarioRoles = new List<UsuarioRol>();				dto.Rol = Rol.ToDTO();			}			if (Usuario != null)			{				this.Usuario.UsuarioRoles = new List<UsuarioRol>();				dto.Usuario = Usuario.ToDTO();			}			return dto;		}	}}
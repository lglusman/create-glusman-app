using System;using System.Collections.Generic;using WebApi.Models.DTOs;using WebApi.Models.Entities;namespace WebApi.Models.DTOs{	public class NivelEducativoDTO	{		public int Id { get; set; } = 0;		public string DescripcionNivelEducativo { get; set; } = "";		public byte? Orden { get; set; } = null;		public string FechaAlta { get; set; } = "";		public string? FechaBaja { get; set; } = null;		public short? MotivoBajaId { get; set; } = null;		public int UsuarioAltaId { get; set; } = 0;		public int? UsuarioBajaId { get; set; } = null;		public string? FechaModificacion { get; set; } = null;		public int? UsuarioModificacionId { get; set; } = null;		public NivelEducativo ToEntity()		{			return new NivelEducativo()			{				Id = Id,				DescripcionNivelEducativo = DescripcionNivelEducativo,				Orden = Orden,				FechaAlta = DateTime.Parse(FechaAlta),				FechaBaja = FechaBaja != "" && FechaBaja != null ? DateTime.Parse(FechaBaja) : null,				MotivoBajaId = MotivoBajaId,				UsuarioAltaId = UsuarioAltaId,				UsuarioBajaId = UsuarioBajaId,				FechaModificacion = FechaModificacion != "" && FechaModificacion != null ? DateTime.Parse(FechaModificacion) : null,				UsuarioModificacionId = UsuarioModificacionId,         };      }        internal void validar()        {            var strError = "";            if (DescripcionNivelEducativo.Trim() == "") strError += "* DescripcionNivelEducativo es requerido";            if (FechaAlta.Trim() == "") strError += "* FechaAlta es requerido";            if (UsuarioAltaId == 0) strError += "* UsuarioAltaId es requerido";            if (strError != "")            {                throw new Exception(strError);            }         }   }}namespace WebApi.Models.Entities{	public partial class NivelEducativo: Idtoable	{		public override NivelEducativoDTO ToDTO()		{			var dto = new NivelEducativoDTO();			dto.Id = Id;			dto.DescripcionNivelEducativo = DescripcionNivelEducativo;			dto.Orden = Orden;			dto.FechaAlta = FechaAlta.ToString("yyyy/MM/dd");			dto.FechaBaja = FechaBaja?.ToString("yyyy/MM/dd");			dto.MotivoBajaId = MotivoBajaId;			dto.UsuarioAltaId = UsuarioAltaId;			dto.UsuarioBajaId = UsuarioBajaId;			dto.FechaModificacion = FechaModificacion?.ToString("yyyy/MM/dd");			dto.UsuarioModificacionId = UsuarioModificacionId;			return dto;		}	}}
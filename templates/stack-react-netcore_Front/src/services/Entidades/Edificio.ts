import { doDelete, doGet, doPost, doPut } from '..'import { Paginacion } from '../../Types/paginacion'import { typeOpciones } from '../../Types/types'import { Presupuesto} from './Presupuesto'export class Edificio {  id: number  nombre: string  localidad: string  domicilio: string  fechaAlta: string  fechaBaja? : string  fechaModificacion? : string  usuarioAltaId: number  usuarioBajaId? : number  usuarioModificacionId? : number  presupuestos: Presupuesto[]   constructor() {    this.id = 0;    this.nombre = "";    this.localidad = "";    this.domicilio = "";    this.fechaAlta = "";    this.fechaBaja = "";    this.fechaModificacion = "";    this.usuarioAltaId = 0;    this.usuarioBajaId = 0;    this.usuarioModificacionId = 0;    this.presupuestos = new Array<Presupuesto>();  }  static async TraerUno(id: number, { inc = '', cant = 0, pag = 0, orden = '' }: typeOpciones): Promise<Paginacion<Edificio> | null> {    return await doGet(`/Edificios/${id}?inc=${inc}&cant=${cant}&pag=${pag}&orden=${orden}`)  }  static async TraerTodos({ inc = '', cant = 0, pag = 0, orden = '' }: typeOpciones): Promise<Paginacion<Edificio> | null> {    return await doGet(`/Edificios?inc=${inc}&cant=${cant}&pag=${pag}&orden=${orden}`)  }  static async Buscar(busqueda: string, { inc = '', cant = 0, pag = 0, orden = '' }: typeOpciones): Promise<Paginacion<Edificio> | null> {    if (busqueda === undefined || busqueda === null || busqueda === '') {      return null    }    const ret = await doGet(`/Edificios/${busqueda}__ax?inc=${inc}&cant=${cant}&pag=${pag}&orden=${orden}`)     return ret   }   static async Guardar(entidad: Edificio) {      let resp: Paginacion<Edificio>      if (entidad.id > 0) {         resp = await doPut(`/Edificios`, entidad)      } else {         resp = await doPost(`/Edificios`, entidad)      }      return resp   }   static async Eliminar(id: number) {      return await doDelete(`/Edificios`, id)   }}
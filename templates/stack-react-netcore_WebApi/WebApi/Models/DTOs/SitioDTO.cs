using System;using System.Collections.Generic;using WebApi.Models.DTOs;using WebApi.Models.Entities;namespace WebApi.Models.DTOs{	public class SitioDTO	{		public int Id { get; set; } = 0;		public string DescripcionSitio { get; set; } = "";		public string Url { get; set; } = "";		public string Icono { get; set; } = "";		public string FechaAlta { get; set; } = "";		public int UsuarioAltaId { get; set; } = 0;		public string? FechaBaja { get; set; } = null;		public int? UsuarioBajaId { get; set; } = null;		public string? FechaModificacion { get; set; } = null;		public int? UsuarioModificacionId { get; set; } = null;        public List<PermisoDTO> Permisos { get; set; } = new List<PermisoDTO>();		public Sitio ToEntity()		{			return new Sitio()			{				Id = Id,				DescripcionSitio = DescripcionSitio,				Url = Url,				Icono = Icono,				FechaAlta = DateTime.Parse(FechaAlta),				UsuarioAltaId = UsuarioAltaId,				FechaBaja = FechaBaja != "" && FechaBaja != null ? DateTime.Parse(FechaBaja) : null,				UsuarioBajaId = UsuarioBajaId,				FechaModificacion = FechaModificacion != "" && FechaModificacion != null ? DateTime.Parse(FechaModificacion) : null,				UsuarioModificacionId = UsuarioModificacionId,         };      }        internal void validar()        {            var strError = "";            if (DescripcionSitio.Trim() == "") strError += "* DescripcionSitio es requerido";            if (Url.Trim() == "") strError += "* Url es requerido";            if (Icono.Trim() == "") strError += "* Icono es requerido";            if (FechaAlta.Trim() == "") strError += "* FechaAlta es requerido";            if (UsuarioAltaId == 0) strError += "* UsuarioAltaId es requerido";            if (strError != "")            {                throw new Exception(strError);            }         }   }}namespace WebApi.Models.Entities{	public partial class Sitio: Idtoable	{		public override SitioDTO ToDTO()		{			var dto = new SitioDTO();			dto.Id = Id;			dto.DescripcionSitio = DescripcionSitio;			dto.Url = Url;			dto.Icono = Icono;			dto.FechaAlta = FechaAlta.ToString("yyyy/MM/dd");			dto.UsuarioAltaId = UsuarioAltaId;			dto.FechaBaja = FechaBaja?.ToString("yyyy/MM/dd");			dto.UsuarioBajaId = UsuarioBajaId;			dto.FechaModificacion = FechaModificacion?.ToString("yyyy/MM/dd");			dto.UsuarioModificacionId = UsuarioModificacionId;			if (Permisos != null)			{				var lista = new List<PermisoDTO>();				foreach (var item in Permisos)				{					item.Sitio = new Sitio();					lista.Add(item.ToDTO());				}				dto.Permisos = lista;			}			return dto;		}	}}
using System;using System.Collections.Generic;using WebApi.Models.DTOs;using WebApi.Models.Entities;namespace WebApi.Models.DTOs{	public class EdificioDTO	{		public int Id { get; set; } = 0;		public string Nombre { get; set; } = "";		public string Localidad { get; set; } = "";		public string Domicilio { get; set; } = "";		public string FechaAlta { get; set; } = "";		public string? FechaBaja { get; set; } = null;		public string? FechaModificacion { get; set; } = null;		public int UsuarioAltaId { get; set; } = 0;		public int? UsuarioBajaId { get; set; } = null;		public int? UsuarioModificacionId { get; set; } = null;        public List<PresupuestoDTO> Presupuestos { get; set; } = new List<PresupuestoDTO>();		public Edificio ToEntity()		{			return new Edificio()			{				Id = Id,				Nombre = Nombre,				Localidad = Localidad,				Domicilio = Domicilio,				FechaAlta = DateTime.Parse(FechaAlta),				FechaBaja = FechaBaja != "" && FechaBaja != null ? DateTime.Parse(FechaBaja) : null,				FechaModificacion = FechaModificacion != "" && FechaModificacion != null ? DateTime.Parse(FechaModificacion) : null,				UsuarioAltaId = UsuarioAltaId,				UsuarioBajaId = UsuarioBajaId,				UsuarioModificacionId = UsuarioModificacionId,         };      }        internal void validar()        {            var strError = "";            if (Nombre.Trim() == "") strError += "* Nombre es requerido";            if (Localidad.Trim() == "") strError += "* Localidad es requerido";            if (Domicilio.Trim() == "") strError += "* Domicilio es requerido";            if (FechaAlta.Trim() == "") strError += "* FechaAlta es requerido";            if (UsuarioAltaId == 0) strError += "* UsuarioAltaId es requerido";            if (strError != "")            {                throw new Exception(strError);            }         }   }}namespace WebApi.Models.Entities{	public partial class Edificio: Idtoable	{		public override EdificioDTO ToDTO()		{			var dto = new EdificioDTO();			dto.Id = Id;			dto.Nombre = Nombre;			dto.Localidad = Localidad;			dto.Domicilio = Domicilio;			dto.FechaAlta = FechaAlta.ToString("yyyy/MM/dd");			dto.FechaBaja = FechaBaja?.ToString("yyyy/MM/dd");			dto.FechaModificacion = FechaModificacion?.ToString("yyyy/MM/dd");			dto.UsuarioAltaId = UsuarioAltaId;			dto.UsuarioBajaId = UsuarioBajaId;			dto.UsuarioModificacionId = UsuarioModificacionId;			if (Presupuestos != null)			{				var lista = new List<PresupuestoDTO>();				foreach (var item in Presupuestos)				{					item.Edificio = new Edificio();					lista.Add(item.ToDTO());				}				dto.Presupuestos = lista;			}			return dto;		}	}}